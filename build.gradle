// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
        maven {
            url 'https://repos.zeroturnaround.com/nexus/content/repositories/zt-public-releases'
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.0.0-beta5'
        // This does not break the build when Android Studio is missing the JRebel for Android plugin.
        classpath 'com.zeroturnaround.jrebel.android:jr-android-gradle:0.9.18'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
        classpath 'io.fabric.tools:gradle:1.15.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.0-beta-4589"
    }
}

def computeVersionCode(int versionMajor, int versionMinor, int versionPatch, int versionBuild = 0){
    return versionMajor * 100000 + versionMinor * 1000 + versionPatch * 10 + versionBuild
}

def generateVersionName(String versionPrefix, int versionMajor, int versionMinor, int versionPatch, String versionSuffix = ""){
    def versionName = "${versionPrefix}${versionMajor}.${versionMinor}.${versionPatch}"

    if(versionSuffix != null && !versionSuffix.isEmpty() && versionSuffix != "release"){
        versionName += "-${versionSuffix}"
    }

    return versionName
}

def generateVersionNameSuffix(int versionBuild, String releaseType){
    return ".${releaseType}.${versionBuild} (${getGitShortHash()})"
}

/**
 * @return The most recent git tag to be used as version name for the app.
 */
def getGitVersion() {
    def cmd = "git describe --tag"
    try {
        def proc = cmd.execute()
        return proc.text.trim()
    } catch (IOException e) {
        //Unable to find 'git'
        return "please update version name manually"
    }
}



def getGitShortHash(){
    def cmd = "git rev-parse --short HEAD"
    try{
        def proc = cmd.execute()
        return proc.text.trim()
    } catch(IOException e){
        //Unable to find git
        return ""
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }

        flatDir {
            dirs 'libs'
        }
    }
}